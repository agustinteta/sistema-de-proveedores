<!DOCTYPE html>
<html lang="es">
    <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>Nueva venta</title>
        
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/css/bootstrap.min.css" rel="stylesheet" />
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.min.js"></script>
        <style>
        .form-container {
            width: 45%;
            float: left;
        }

        .lista-container {
            width: 45%;
            float: right;
        }

        .clearfix::after {
            content: "";
            clear: both;
            display: table;
        }

        #lista-elementos {
            border-collapse: collapse;
            margin-top: 20px;
            width: 100%;
        }

        #lista-elementos th,
        #lista-elementos td {
            border: 1px solid black;
            padding: 8px;
            text-align: center;
        }

        #lista-elementos th {
            background-color: #f2f2f2;
            white-space: nowrap;
        }

        td {
        width: auto;
        white-space: nowrap;
        }
        </style>
    </head>

    <body>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container">
                <a class="navbar-brand" href="#">Distribuidora</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="/">Inicio</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/productos">Productos</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/clientes">Clientes</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/nueva_venta">Nueva Venta</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <div class="container mt-4 clearfix">
            <div class="form-container">
                <h4 class="mb-4">Seleccione producto y cantidad a agregar</h4>
                
                <form>
                    <div class="mb-3 form-group">
                        <label for="producto" style="margin-bottom: 12px;">Producto*</label><br>
                        <select id="producto" class="form-select" required>
                            <option value="" disabled selected>-- Seleccionar producto --</option>
                            <% productoNombre.forEach(producto => { %>
                                <option value="<%= producto._id %>"><%= producto.name %></option>
                            <% }); %>
                        </select>
                    </div>

                    <div class="mb-3 form-group">
                        <label for="unidades" style="margin-bottom: 12px;">Unidades*</label><br>
                        <input id="unidades" type="number" class="form-control" placeholder="Ingrese la cantidad de unidades..." required>
                    </div>

                    <div class="mb-3 form-group">
                        <label for="bonificacion" style="margin-bottom: 12px;">Bonificación de fábrica (en %)*</label>
                        <input id="bonificacion" type="number" class="form-control" placeholder="0" required>
                    </div>
                    

                    <div class="mb-3">
                        <button type="button" id="btnAgregar" class="btn btn-primary" onclick="obtenerDatos()" style="background-color: blue; color: white;">Agregar</button>
                        <button type="button" class="btn btn-outline-dark" style="color:black;" data-bs-toggle="modal" data-bs-target="#modalCliente">Guardar</button>
                    </div>
                </form>
            </div>

            <div class="modal fade" id="modalCliente" tabindex="-1" aria-labelledby="modalClienteLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalClienteLabel">Seleccionar Cliente</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <label for="clienteModal" style="margin-bottom: 12px;">Cliente*</label>
                            <select id="clienteModal" class="form-select" required>
                                <option value="" disabled selected>-- Seleccionar cliente --</option>
                                <% clienteNombreFantasia.forEach(cliente => { %>
                                    <option value="<%= cliente._id %>"><%= cliente.nombreFantasia %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-bs-backdrop="static" onclick="guardarConCliente()">Guardar</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="lista-container">
                <h4 class="mb-4">Productos agregados</h4>
                <table id="lista-elementos" class="table">
                    <thead>
                        <tr>
                            <th>Producto</th>
                            <th>Unidades</th>
                            <th>Bonificación (en %)</th>
                            <th>Precio Unitario</th>
                            <th>Subtotal</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Filas de productos agregados -->
                    </tbody>
                </table>
                
                <div id="total-container" class="mt-3" style="text-align: right;">
                    <strong>Total Acumulado: $<span id="total-acumulado">0.00</span></strong>
                </div>
        </div>

        <footer class="bg-dark text-light text-center py-1 fixed-bottom">
            <p>&copy; UAA - Sistema de proveedores</p>
        </footer>
    
        <!-- Agrega Axios CDN -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

        <script>
            function obtenerDatos() {
                var resultados;
                // Lee los valores ingresos en los distintos campos
                const producto = document.getElementById("producto").value;
                const unidades = document.getElementById("unidades").value;
                const bonificacion = document.getElementById("bonificacion").value;
            
                // Si alguno está vacío, emite una alerta
                if (producto === "" || unidades === "" || bonificacion === "") {
                    alert("Por favor, complete todos los campos.");
                    return null;
                }

                if(bonificacion > 100 || bonificacion < 0) {
                    alert("La bonificación debe ser un valor entre 0 y 100.");
                    return null;
                }
                
                // Guarda los campos ingresados en un arreglo y los retorna
                var resultados = [producto, unidades, bonificacion];

                return resultados;
            }
            
            function agregarEvento() {
                var resultados = obtenerDatos();

                if (resultados !== null) {
                    // Insertar la fila después de actualizar el total acumulado
                    insertarFila(resultados);
                    // Actualizar el total acumulado antes de insertar la fila
                    actualizarTotalAcumulado();
                }
            }

            function insertarFila(datos) {
                var tabla = document.getElementById("lista-elementos");
                var fila = tabla.insertRow(-1);
                var precioUnitario = obtenerPrecioProducto(datos[0]);
                var subtotal = obtenerSubtotal(precioUnitario, datos[1]);

                // Se le resta el porcentaje de bonificación
                if(datos[2] > 0) {
                    subtotal -= (subtotal * (datos[2]/100));
                }

                insertarCelda(fila, obtenerNombreProducto(datos[0])); // Producto
                insertarCelda(fila, datos[1]); // Unidades
                insertarCelda(fila, datos[2]); // Bonificación
                insertarCelda(fila, precioUnitario); // Precio unitario
                insertarCelda(fila, subtotal); // Subtotal

                // Acciones (botón "Eliminar")
                var celdaBotones = fila.insertCell(5);
                celdaBotones.className = "text-center";
                var btnEliminar = document.createElement("button");
                btnEliminar.innerText = "Eliminar";
                btnEliminar.className = "btn btn-danger btn-sm";

                btnEliminar.addEventListener("click", function () {
                    eliminarFila(fila);
                });

                celdaBotones.appendChild(btnEliminar);

                // Actualizar el total acumulado
                actualizarTotalAcumulado();
            }

            function insertarCelda(fila, contenido) {
                var celda = fila.insertCell(fila.cells.length);
                celda.innerHTML = contenido;
            }

            function eliminarFila(fila) {
                var tabla = document.getElementById("lista-elementos");
                var index = fila.rowIndex;
                var subtotal = parseFloat(tabla.rows[index].cells[4].innerHTML);

                // Eliminar la fila
                tabla.deleteRow(index);

                // Actualizar el total acumulado restando el subtotal eliminado
                actualizarTotalAcumulado();
            }

            function actualizarTotalAcumulado() {
                var tabla = document.getElementById("lista-elementos");
                var totalAcumulado = 0;

                // Iterar a través de las filas, omitiendo la última fila de total
                for (var i = 0; i < tabla.rows.length - 1; i++) {
                    var subtotal = parseFloat(tabla.rows[i+1].cells[4].innerHTML);
                    totalAcumulado += subtotal;
                }

                // Actualizar el elemento fuera de la tabla con el total acumulado
                document.getElementById("total-acumulado").innerHTML = totalAcumulado.toFixed(2);
            }

            function obtenerSubtotal(precioUnitario, unidades) {
                return precioUnitario * unidades;
            }

            function obtenerIdCliente(id) {
                let idCliente = "";
                <% clienteId.forEach(cliente => { %>
                    if("<%= cliente._id %>" === id) {
                        idCliente = "<%= cliente.idCliente %>";
                    }
                <% }); %>

                return idCliente;
            }

            function obtenerNombreProducto(id) {
                var nombreProducto = "";
                <% productoNombre.forEach(producto => { %>
                    if("<%= producto._id %>" === id) {
                        nombreProducto = "<%= producto.name %>";
                    }
                <% }); %>

                return nombreProducto;
            }
            
            function obtenerPrecioProducto(id) {
                var precioProducto = "";
                <% productoPrecio.forEach(producto => { %>
                    if("<%= producto._id %>" === id) {
                        precioProducto = "<%= producto.price %>";
                    }
                <% }); %>

                return precioProducto;
            }

            var btnAgregar = document.getElementById("btnAgregar");
            btnAgregar.removeEventListener("click", agregarEvento);
            btnAgregar.addEventListener("click", agregarEvento);
        </script>

        <script>
            function guardarConCliente() {
                const nombreCliente = document.getElementById("clienteModal").value;
                const clienteId = obtenerIdCliente(nombreCliente);

                if (!clienteId) {
                    alert("Por favor, seleccione un cliente.");
                    return;
                }

                const productosAgregados = obtenerProductosAgregados();
                const totalAcumulado = parseFloat(document.getElementById("total-acumulado").innerHTML);

                const data = {
                    idCliente: clienteId,
                    productos: productosAgregados,
                    total: totalAcumulado
                };

                // Realiza una solicitud HTTP POST a tu servidor para crear la venta
                axios.post('/sales', data)
                    .then(response => {
                        console.log("Venta creada exitosamente:", response.data);
                        mostrarSweetAlert();
                        // Opcionalmente, puedes reiniciar el formulario u realizar otras acciones después de la creación exitosa
                        resetearFormulario();
                    })
                    .catch(error => {
                        console.error("Error al crear la venta:", error);
                        alert("Error al crear la venta. Por favor, inténtelo de nuevo.");
                    });

                    $('#modalCliente').modal('hide');
            }

            function mostrarSweetAlert() {
                Swal.fire({
                icon: "success",
                title: "La venta fue cargada con éxito.",
                showConfirmButton: true,
                });
            }

            function obtenerProductosAgregados() {
                const tabla = document.getElementById("lista-elementos");
                const productos = [];

                for (let i = 1; i < tabla.rows.length; i++) {
                    const id = tabla.rows[i].cells[0].innerHTML; // Suponiendo que la primera celda contiene el ID del producto
                    const nombre = tabla.rows[i].cells[0].innerHTML; // Reemplaza con el índice correcto de la celda para el nombre del producto
                    const precio = parseFloat(tabla.rows[i].cells[3].innerHTML); // Reemplaza con el índice correcto de la celda para el precio
                    const cantidad = parseInt(tabla.rows[i].cells[1].innerHTML); // Reemplaza con el índice correcto de la celda para la cantidad

                    productos.push({ id, nombre, precio, cantidad });
                }

                return productos;
            }

            function resetearFormulario() {
                document.getElementById("producto").value = "";
                document.getElementById("unidades").value = "";
                document.getElementById("bonificacion").value = "";

                // Vacía la tabla
                var tabla = document.getElementById("lista-elementos");

                while (tabla.rows.length > 1) {
                    tabla.deleteRow(1);
                }

                // Actualiza el total acumulado después de vaciar la tabla
                actualizarTotalAcumulado();
            }
        </script>
    </body>
</html>